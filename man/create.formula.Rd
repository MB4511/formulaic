% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.formula.R
\name{create.formula}
\alias{create.formula}
\title{Create Formula}
\usage{
create.formula(outcome.name, input.names, input.patterns = NA,
  all.data.names = NA, include.backtick = TRUE,
  return.as = "formula")
}
\arguments{
\item{outcome.name}{The name of the variable serving as the outcome.}

\item{input.names}{The names of the variables with the full names delineated.}

\item{input.patterns}{Includes additional input variables.  The user may enter patterns -- e.g. to include every variable with a name that includes the pattern.  Multiple patterns may be included as a character vector.  However, each pattern may not contain spaces and is otherwise subject to the same limits on patterns as used in the grep function.}

\item{all.data.names}{The names of the data within which to search for patterns.}

\item{include.backtick}{TBD}

\item{return.as}{TBD}
}
\description{
Automatically creates a formula
}
\details{
Return as the data type of the output.  If not set as "formula", then a character vector will be returned.
The input.names and names of variables matching the input.patterns will be concatenated to form the full list of input variables.
Note:  Does not account for interactions (a*b)
}
\examples{
 n <- 10
 dd <- data.table::data.table(w = rnorm(n= n), x = rnorm(n = n), pixel_1 = rnorm(n = n))
 dd[, pixel_2 := 0.3 * pixel_1 + rnorm(n)]
 dd[, y := 5 * x + 3 * pixel_1 + 2 * pixel_2 + rnorm(n)]

 create.formula(outcome.name = "y", input.names = "x", input.patterns = c("pi", "xel"),
   all.data.names = names(dd), return.as = "character")
}
